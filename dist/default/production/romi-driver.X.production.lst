

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 19 23:51:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16LF877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  001A                     _RCREG	set	26
   232  0019                     _TXREG	set	25
   233  0064                     _TXIF	set	100
   234  0065                     _RCIF	set	101
   235  00C4                     _CREN	set	196
   236  005E                     _PEIE	set	94
   237  005F                     _GIE	set	95
   238  00C7                     _SPEN	set	199
   239  0041                     _RD1	set	65
   240  0099                     _SPBRG	set	153
   241  0447                     _TRISD7	set	1095
   242  0446                     _TRISD6	set	1094
   243  0465                     _RCIE	set	1125
   244  04C5                     _TXEN	set	1221
   245  0464                     _TXIE	set	1124
   246  04C4                     _SYNC	set	1220
   247  04C2                     _BRGH	set	1218
   248  0441                     _TRISD1	set	1089
   249                           
   250                           	psect	cinit
   251  000F                     start_initialization:	
   252                           ; #config settings
   253                           
   254  000F                     __initialization:
   255  000F                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  000F                     __end_of__initialization:
   259  000F  0183               	clrf	3
   260  0010  120A  118A  2842   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	cstackCOMMON
   263  0070                     __pcstackCOMMON:
   264  0070                     ?_toggle_led:
   265  0070                     ?_setup_led:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_setup_uart:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_send_char:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ??_send_char:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_get_char:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ??_get_char:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_int_routine:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_main:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     send_char@data:	
   290                           ; 1 bytes @ 0x0
   291                           
   292                           
   293                           ; 1 bytes @ 0x0
   294  0070                     	ds	1
   295  0071                     ??_int_routine:
   296                           
   297                           ; 1 bytes @ 0x1
   298  0071                     	ds	3
   299  0074                     int_routine@dat:
   300                           
   301                           ; 1 bytes @ 0x4
   302  0074                     	ds	1
   303  0075                     ??_toggle_led:
   304  0075                     ??_setup_led:	
   305                           ; 1 bytes @ 0x5
   306                           
   307  0075                     ??_setup_uart:	
   308                           ; 1 bytes @ 0x5
   309                           
   310                           
   311                           ; 1 bytes @ 0x5
   312  0075                     	ds	3
   313  0078                     ??_main:
   314                           
   315                           	psect	maintext
   316  0042                     __pmaintext:	
   317                           ; 1 bytes @ 0x8
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 63 in file "main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels required when called: 3
   343 ;; This function calls:
   344 ;;		_setup_led
   345 ;;		_setup_uart
   346 ;;		_toggle_led
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           
   353                           ;psect for function _main
   354  0042                     _main:
   355  0042                     l754:	
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   358                           
   359                           
   360                           ;main.c: 64:     setup_led();
   361  0042  120A  118A  206C  120A  118A  	fcall	_setup_led
   362  0047                     l756:
   363                           
   364                           ;main.c: 65:     setup_uart();
   365  0047  120A  118A  202E  120A  118A  	fcall	_setup_uart
   366  004C                     l758:
   367                           
   368                           ;main.c: 68:         toggle_led();
   369  004C  120A  118A  2055  120A  118A  	fcall	_toggle_led
   370  0051  284C               	goto	l758
   371  0052  120A  118A  280C   	ljmp	start
   372  0055                     __end_of_main:
   373                           
   374                           	psect	text1
   375  0055                     __ptext1:	
   376 ;; *************** function _toggle_led *****************
   377 ;; Defined at:
   378 ;;		line 23 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0
   394 ;;      Temps:          3       0       0       0       0
   395 ;;      Totals:         3       0       0       0       0
   396 ;;Total ram usage:        3 bytes
   397 ;; Hardware stack levels used: 1
   398 ;; Hardware stack levels required when called: 2
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _toggle_led
   408  0055                     _toggle_led:
   409  0055                     l714:	
   410                           ;incstack = 0
   411                           ; Regs used in _toggle_led: [wreg]
   412                           
   413                           
   414                           ;main.c: 24:     _delay((unsigned long)((5000)*(2983056/4000.0)));
   415  0055  3013               	movlw	19
   416  0056  00F7               	movwf	??_toggle_led+2
   417  0057  30EB               	movlw	235
   418  0058  00F6               	movwf	??_toggle_led+1
   419  0059  3091               	movlw	145
   420  005A  00F5               	movwf	??_toggle_led
   421  005B                     u67:
   422  005B  0BF5               	decfsz	??_toggle_led,f
   423  005C  285B               	goto	u67
   424  005D  0BF6               	decfsz	??_toggle_led+1,f
   425  005E  285B               	goto	u67
   426  005F  0BF7               	decfsz	??_toggle_led+2,f
   427  0060  285B               	goto	u67
   428                           
   429                           ;main.c: 25:     RD1 = !RD1;
   430  0061  3002               	movlw	2
   431  0062  1283               	bcf	3,5	;RP0=0, select bank0
   432  0063  1303               	bcf	3,6	;RP1=0, select bank0
   433  0064  0688               	xorwf	8,f
   434  0065                     l35:
   435  0065  0008               	return
   436  0066                     __end_of_toggle_led:
   437                           
   438                           	psect	text2
   439  002E                     __ptext2:	
   440 ;; *************** function _setup_uart *****************
   441 ;; Defined at:
   442 ;;		line 32 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0
   459 ;;      Totals:         0       0       0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; Hardware stack levels required when called: 2
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _setup_uart
   472  002E                     _setup_uart:
   473  002E                     l718:	
   474                           ;incstack = 0
   475                           ; Regs used in _setup_uart: [wreg]
   476                           
   477                           
   478                           ;main.c: 34:     BRGH = 1;
   479  002E  1683               	bsf	3,5	;RP0=1, select bank1
   480  002F  1303               	bcf	3,6	;RP1=0, select bank1
   481  0030  1518               	bsf	24,2	;volatile
   482  0031                     l720:
   483                           
   484                           ;main.c: 35:     SPBRG = 4;
   485  0031  3004               	movlw	4
   486  0032  0099               	movwf	25	;volatile
   487  0033                     l722:
   488                           
   489                           ;main.c: 36:     SYNC = 0;
   490  0033  1218               	bcf	24,4	;volatile
   491  0034                     l724:
   492                           
   493                           ;main.c: 37:     SPEN = 1;
   494  0034  1283               	bcf	3,5	;RP0=0, select bank0
   495  0035  1303               	bcf	3,6	;RP1=0, select bank0
   496  0036  1798               	bsf	24,7	;volatile
   497  0037                     l726:
   498                           
   499                           ;main.c: 38:     GIE = 1;
   500  0037  178B               	bsf	11,7	;volatile
   501  0038                     l728:
   502                           
   503                           ;main.c: 39:     PEIE = 1;
   504  0038  170B               	bsf	11,6	;volatile
   505  0039                     l730:
   506                           
   507                           ;main.c: 40:     TXIE = 0;
   508  0039  1683               	bsf	3,5	;RP0=1, select bank1
   509  003A  1303               	bcf	3,6	;RP1=0, select bank1
   510  003B  120C               	bcf	12,4	;volatile
   511  003C                     l732:
   512                           
   513                           ;main.c: 41:     TXEN = 1;
   514  003C  1698               	bsf	24,5	;volatile
   515  003D                     l734:
   516                           
   517                           ;main.c: 44:     RCIE = 1;
   518  003D  168C               	bsf	12,5	;volatile
   519  003E                     l736:
   520                           
   521                           ;main.c: 45:     CREN = 1;
   522  003E  1283               	bcf	3,5	;RP0=0, select bank0
   523  003F  1303               	bcf	3,6	;RP1=0, select bank0
   524  0040  1618               	bsf	24,4	;volatile
   525  0041                     l41:
   526  0041  0008               	return
   527  0042                     __end_of_setup_uart:
   528                           
   529                           	psect	text3
   530  006C                     __ptext3:	
   531 ;; *************** function _setup_led *****************
   532 ;; Defined at:
   533 ;;		line 28 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		None
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0
   550 ;;      Totals:         0       0       0       0       0
   551 ;;Total ram usage:        0 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; Hardware stack levels required when called: 2
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _setup_led
   563  006C                     _setup_led:
   564  006C                     l716:	
   565                           ;incstack = 0
   566                           ; Regs used in _setup_led: []
   567                           
   568                           
   569                           ;main.c: 29:     TRISD1 = 0;
   570  006C  1683               	bsf	3,5	;RP0=1, select bank1
   571  006D  1303               	bcf	3,6	;RP1=0, select bank1
   572  006E  1088               	bcf	8,1	;volatile
   573  006F                     l38:
   574  006F  0008               	return
   575  0070                     __end_of_setup_led:
   576                           
   577                           	psect	text4
   578  0013                     __ptext4:	
   579 ;; *************** function _int_routine *****************
   580 ;; Defined at:
   581 ;;		line 56 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  dat             1    4[COMMON] unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         1       0       0       0       0
   597 ;;      Temps:          3       0       0       0       0
   598 ;;      Totals:         4       0       0       0       0
   599 ;;Total ram usage:        4 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; Hardware stack levels required when called: 1
   602 ;; This function calls:
   603 ;;		_get_char
   604 ;;		_send_char
   605 ;; This function is called by:
   606 ;;		Interrupt level 1
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _int_routine
   612  0013                     _int_routine:
   613  0013                     i1l748:
   614                           
   615                           ;main.c: 57:     if(RCIF){
   616  0013  1283               	bcf	3,5	;RP0=0, select bank0
   617  0014  1303               	bcf	3,6	;RP1=0, select bank0
   618  0015  1E8C               	btfss	12,5	;volatile
   619  0016  2818               	goto	u1_21
   620  0017  2819               	goto	u1_20
   621  0018                     u1_21:
   622  0018  2827               	goto	i1l53
   623  0019                     u1_20:
   624  0019                     i1l750:
   625                           
   626                           ;main.c: 58:         unsigned char dat = get_char();
   627  0019  120A  118A  2070  120A  118A  	fcall	_get_char
   628  001E  00F1               	movwf	??_int_routine
   629  001F  0871               	movf	??_int_routine,w
   630  0020  00F4               	movwf	int_routine@dat
   631  0021                     i1l752:
   632                           
   633                           ;main.c: 59:         send_char(dat);
   634  0021  0874               	movf	int_routine@dat,w
   635  0022  120A  118A  2066  120A  118A  	fcall	_send_char
   636  0027                     i1l53:
   637  0027  0873               	movf	??_int_routine+2,w
   638  0028  008A               	movwf	10
   639  0029  0E72               	swapf	??_int_routine+1,w
   640  002A  0083               	movwf	3
   641  002B  0EFE               	swapf	btemp,f
   642  002C  0E7E               	swapf	btemp,w
   643  002D  0009               	retfie
   644  002E                     __end_of_int_routine:
   645                           
   646                           	psect	intentry
   647  0004                     __pintentry:	
   648                           ;incstack = 0
   649                           ; Regs used in _int_routine: [wreg+status,2+status,0+pclath+cstack]
   650                           
   651  0004                     interrupt_function:
   652  007E                     saved_w	set	btemp
   653  0004  00FE               	movwf	btemp
   654  0005  0E03               	swapf	3,w
   655  0006  00F2               	movwf	??_int_routine+1
   656  0007  080A               	movf	10,w
   657  0008  00F3               	movwf	??_int_routine+2
   658  0009  120A  118A  2813   	ljmp	_int_routine
   659                           
   660                           	psect	text5
   661  0066                     __ptext5:	
   662 ;; *************** function _send_char *****************
   663 ;; Defined at:
   664 ;;		line 48 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  data            1    wreg     unsigned char 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  data            1    0[COMMON] unsigned char 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         1       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         1       0       0       0       0
   682 ;;Total ram usage:        1 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_int_routine
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           
   692                           ;psect for function _send_char
   693  0066                     _send_char:
   694                           
   695                           ;incstack = 0
   696                           ; Regs used in _send_char: [wreg]
   697                           ;send_char@data stored from wreg
   698  0066  00F0               	movwf	send_char@data
   699  0067                     i1l738:
   700                           
   701                           ;main.c: 49:     TXREG = data;
   702  0067  0870               	movf	send_char@data,w
   703  0068  1283               	bcf	3,5	;RP0=0, select bank0
   704  0069  1303               	bcf	3,6	;RP1=0, select bank0
   705  006A  0099               	movwf	25	;volatile
   706  006B                     i1l44:
   707  006B  0008               	return
   708  006C                     __end_of_send_char:
   709                           
   710                           	psect	text6
   711  0070                     __ptext6:	
   712 ;; *************** function _get_char *****************
   713 ;; Defined at:
   714 ;;		line 52 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      unsigned char 
   721 ;; Registers used:
   722 ;;		wreg
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_int_routine
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           
   742                           ;psect for function _get_char
   743  0070                     _get_char:
   744  0070                     i1l740:	
   745                           ;incstack = 0
   746                           ; Regs used in _get_char: [wreg]
   747                           
   748                           
   749                           ;main.c: 53:     return RCREG;
   750  0070  1283               	bcf	3,5	;RP0=0, select bank0
   751  0071  1303               	bcf	3,6	;RP1=0, select bank0
   752  0072  081A               	movf	26,w	;volatile
   753  0073                     i1l47:
   754  0073  0008               	return
   755  0074                     __end_of_get_char:
   756  007E                     btemp	set	126	;btemp
   757  007E                     wtemp0	set	126
   758                           
   759                           	psect	config
   760                           
   761                           ;Config register CONFIG @ 0x2007
   762                           ;	Oscillator Selection bits
   763                           ;	FOSC = XT, XT oscillator
   764                           ;	Watchdog Timer Enable bit
   765                           ;	WDTE = OFF, WDT disabled
   766                           ;	Power-up Timer Enable bit
   767                           ;	PWRTE = OFF, PWRT disabled
   768                           ;	Brown-out Reset Enable bit
   769                           ;	BOREN = OFF, BOR disabled
   770                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   771                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   772                           ;	Data EEPROM Memory Code Protection bit
   773                           ;	CPD = OFF, Data EEPROM code protection off
   774                           ;	Flash Program Memory Write Enable bits
   775                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   776                           ;	In-Circuit Debugger Mode bit
   777                           ;	DEBUG = 0x1, unprogrammed default
   778                           ;	Flash Program Memory Code Protection bit
   779                           ;	CP = OFF, Code protection off
   780  2007                     	org	8199
   781  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_toggle_led

Critical Paths under _int_routine in COMMON

    _int_routine->_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_routine in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_routine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _setup_led
                         _setup_uart
                         _toggle_led
 ---------------------------------------------------------------------------------
 (1) _toggle_led                                           3     3      0       0
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup_uart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_led                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _int_routine                                          4     4      0      30
                                              1 COMMON     4     4      0
                           _get_char
                          _send_char
 ---------------------------------------------------------------------------------
 (3) _send_char                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _get_char                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup_led
   _setup_uart
   _toggle_led

 _int_routine (ROOT)
   _get_char
   _send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 19 23:51:23 2021

                     l41 0041                       l35 0065                       l38 006F  
                     u67 005B                      l720 0031                      l730 0039  
                    l722 0033                      l714 0055                      l716 006C  
                    l732 003C                      l724 0034                      l734 003D  
                    l726 0037                      l718 002E                      l736 003E  
                    l728 0038                      l754 0042                      l756 0047  
                    l758 004C                      _GIE 005F                      _RD1 0041  
                   _BRGH 04C2                     _CREN 00C4                     _PEIE 005E  
                   _RCIE 0465                     i1l44 006B                     _RCIF 0065  
                   i1l53 0027                     i1l47 0073                     _SPEN 00C7  
                   _TXIE 0464                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4                     u1_20 0019                     u1_21 0018  
                   _main 0042                     btemp 007E                     start 000C  
                  ?_main 0070                    i1l740 0070                    i1l750 0019  
                  i1l752 0021                    i1l738 0067                    i1l748 0013  
                  _RCREG 001A                    _SPBRG 0099                    _TXREG 0019  
                  pclath 000A                    status 0003                    wtemp0 007E  
           ?_int_routine 0070          __initialization 000F             __end_of_main 0055  
                 ??_main 0078                   _TRISD1 0441                   _TRISD6 0446  
                 _TRISD7 0447         __end_of_get_char 0074                   saved_w 007E  
         int_routine@dat 0074  __end_of__initialization 000F           __pcstackCOMMON 0070  
   __size_of_int_routine 001B               __pmaintext 0042               __pintentry 0004  
     __size_of_send_char 0006       __size_of_setup_led 0004                ?_get_char 0070  
                __ptext1 0055                  __ptext2 002E                  __ptext3 006C  
                __ptext4 0013                  __ptext5 0066                  __ptext6 0070  
             ??_get_char 0070     end_of_initialization 000F        __end_of_send_char 006C  
      __end_of_setup_led 0070            send_char@data 0070               _setup_uart 002E  
             _toggle_led 0055      start_initialization 000F              ?_setup_uart 0070  
            ?_toggle_led 0070                ___latbits 0002        __size_of_get_char 0004  
          ??_int_routine 0071        interrupt_function 0004                _send_char 0066  
    __size_of_setup_uart 0014      __size_of_toggle_led 0011      __end_of_int_routine 002E  
              _setup_led 006C               ?_send_char 0070               ?_setup_led 0070  
               _get_char 0070            __size_of_main 0013              _int_routine 0013  
           ??_setup_uart 0075             ??_toggle_led 0075                 intlevel1 0000  
            ??_send_char 0070       __end_of_setup_uart 0042       __end_of_toggle_led 0066  
            ??_setup_led 0075  
